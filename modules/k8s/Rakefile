require "rake/clean"
require_relative "../../rakefiles/vars.rb"
import "../../rakefiles/kops.rake"

if ENV["RAKE_ENV_SHORT"].nil?
  ENV["RAKE_ENV_SHORT"] = "dev"
end
setup_vars(ENV["RAKE_ENV_SHORT"])

task :default => :generate

KOPS_OUT_DIR = "#{@tmpdir}-modules/k8s"
directory KOPS_OUT_DIR
CLOBBER << KOPS_OUT_DIR

task :generate => [@tmpdir, :configure_kops, "Rakefile", "#{KOPS_OUT_DIR}/kubernetes.tf"]
rule "#{KOPS_OUT_DIR}/kubernetes.tf" do
  sh "kops create cluster \
    --name=$TF_VAR_cluster_name \
    --channel=alpha \
    --kubernetes-version=1.7.3 \
    --cloud=aws \
    --zones=us-east-2a,us-east-2b,us-east-2c \
    --node-count=3 \
    --master-zones=us-east-2a,us-east-2b,us-east-2c \
    --node-size=t2.micro \
    --master-size=t2.micro \
    --target=terraform \
    --out=#{KOPS_OUT_DIR} \
    --ssh-public-key=~/.ssh/id_rsa.gpii-ci.pub
  "
  cp FileList.new("./*.tf"), "#{KOPS_OUT_DIR}/"
end
CLEAN << KOPS_OUT_DIR

task :kops_delete_cluster => :configure_kops do
  sh "kops delete cluster \
    --yes \
    --name=$TF_VAR_cluster_name \
    --unregister \
    || echo 'kops delete cluster failed, but that is ok.' \
  "
end
Rake::Task["clean"].enhance do
  Rake::Task[:kops_delete_cluster].invoke
end


# vim: ts=2 sw=2:
