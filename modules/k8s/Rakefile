require "rake/clean"
require_relative "../../rakefiles/vars.rb"
import "../../rakefiles/kops.rake"

if ENV["RAKE_ENV_SHORT"].nil?
  ENV["RAKE_ENV_SHORT"] = "dev"
end
setup_vars(ENV["RAKE_ENV_SHORT"])

task :default => :generate

KOPS_OUT_DIR = "#{@tmpdir}-modules/k8s"
directory KOPS_OUT_DIR
CLOBBER << KOPS_OUT_DIR

desc "Generate config for cluster, including terraform files and kops cluster definition in S3"
task :generate => [@tmpdir, :configure_kops, "Rakefile", "#{KOPS_OUT_DIR}/kubernetes.tf"]
rule "#{KOPS_OUT_DIR}/kubernetes.tf" do
  sh "kops get cluster #{ENV["TF_VAR_cluster_name"]}" do |ok, res|
    unless ok
      sh "kops create cluster \
        --name=#{ENV["TF_VAR_cluster_name"]} \
        --channel=alpha \
        --kubernetes-version=1.7.4 \
        --node-count=3 \
        --node-size=t2.micro \
        --master-size=t2.micro \
        --zones=us-east-2a,us-east-2b,us-east-2c \
        --master-zones=us-east-2a,us-east-2b,us-east-2c \
        --cloud=aws \
        --target=terraform \
        --out=#{KOPS_OUT_DIR} \
        --ssh-public-key=~/.ssh/id_rsa.gpii-ci.pub \
      "
    else
      puts "Cluster #{ENV["TF_VAR_cluster_name"]} already exists."
      puts "If you want to change its configuration, you'll need to:"
      puts "* rake destroy"
      puts "* rake clean"
      puts "(Note that this DESTROYS THE CLUSTER.)"
      puts "--OR--"
      puts "* Upgrade manually. See https://github.com/kubernetes/kops/blob/master/docs/upgrade.md."
      puts "(This is not recommended except for testing.)"
      puts
      puts "Updating an existing cluster is a planned feature."
      sh "kops update cluster \
        --name=#{ENV["TF_VAR_cluster_name"]} \
        --target=terraform \
        --out=#{KOPS_OUT_DIR} \
      "
    end
  end
  cp FileList.new("./*.tf"), "#{KOPS_OUT_DIR}/"
end
CLEAN << KOPS_OUT_DIR

desc "[ADVANCED] Delete kops state for this cluster; will make an existing cluster unusable without S3 rollback"
task :kops_delete_cluster => :configure_kops do
  sh "kops delete cluster \
    --yes \
    --name=#{ENV["TF_VAR_cluster_name"]} \
    --unregister \
    || echo 'kops delete cluster failed, but that is ok.' \
  "
end


# vim: ts=2 sw=2:
