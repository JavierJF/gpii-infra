require "rake/clean"
require_relative "../rakefiles/vars.rb"
import "../rakefiles/build.rake"
import "../rakefiles/deploy_gpii.rake"

if ENV["RAKE_ENV_SHORT"].nil?
  ENV["RAKE_ENV_SHORT"] = File.basename(File.dirname(__FILE__))
end
setup_vars(ENV["RAKE_ENV_SHORT"])

task :default => :dev

task :dev => [@tmpdir, :generate_modules] do
  sh "bundle exec kitchen create -l debug"
  begin
    sh "bundle exec kitchen converge -l debug"
    Rake::Task["wait_for_api"].invoke
    sh "bundle exec kitchen verify -l debug"
  ensure
    Rake::Task["destroy_dev"].invoke
  end
end
CLEAN << "#{@tmpdir}/terragrunt"

# If user invokes :destroy directly, really destroy.
task :destroy do
  ENV["RAKE_DESTROY"] = "true"
  Rake::Task["destroy_dev"].invoke
end

task :destroy_dev => @tmpdir do
  if ENV["RAKE_DESTROY"]
    sh "bundle exec kitchen destroy -l debug"
    Rake::Task["destroy_prereqs"].invoke
  else
    puts "RAKE_DESTROY is not set so not destroying environment."
  end
end



# vim: ts=2 sw=2:
