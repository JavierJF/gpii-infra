require "rake/clean"
require_relative "../rakefiles/vars.rb"
import "../rakefiles/build.rake"
import "../rakefiles/deploy.rake"

if ENV["RAKE_ENV_SHORT"].nil?
  ENV["RAKE_ENV_SHORT"] = File.basename(File.dirname(__FILE__))
end
setup_vars(ENV["RAKE_ENV_SHORT"])

task :default => :deploy

desc "Create or update cluster"
task :apply => [@tmpdir, :generate_modules] do
  sh "bundle exec kitchen create -l debug"
  sh "bundle exec kitchen converge -l debug"
  Rake::Task["wait_for_api"].invoke
  sh "bundle exec kitchen verify -l debug"
end
CLEAN << "#{@tmpdir}/terragrunt"

desc "Destroy cluster"
task :destroy => [@tmpdir, :undeploy] do
  Rake::Task["_destroy"].invoke
end

desc "[ADVANCED] Helper for :destroy that ignores dependencies; useful for cleaning up malformed clusters."
task :_destroy => @tmpdir do
  sh "bundle exec kitchen destroy -l debug"
  Rake::Task["kops_delete_cluster"].invoke
  Rake::Task["destroy_prereqs"].invoke
end


# vim: ts=2 sw=2:
